// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract CustomToken is ERC20, Ownable {
    constructor(
        string memory _name,
        string memory _symbol,
        uint256 _initialSupply,
        address _initialOwner
    ) ERC20(_name, _symbol) Ownable(_initialOwner) {
        _mint(msg.sender, _initialSupply);
    }

    function mintTokens(address _recipient, uint256 _totalSum) external onlyOwner {
        _mint(_recipient, _totalSum);
    }

    function burnTokens(uint256 _totalSum) external {
        _burn(msg.sender, _totalSum);
    }

    function transferTokens(address _recipient, uint256 _totalSum) external returns (bool) {
        _transfer(msg.sender, _recipient, _totalSum);
        return true;
    }
}
